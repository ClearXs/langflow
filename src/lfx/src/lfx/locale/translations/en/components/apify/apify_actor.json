{
  "display_name": "Apify Actors",
  "description": "Use Apify Actors to extract data from hundreds of places fast. This component can be used in a flow to retrieve data or as a tool with an agent.",
  "apify_token": {
    "display_name": "Apify Token",
    "info": "The API token for the Apify account."
  },
  "actor_id": {
    "display_name": "Actor",
    "info": "Actor name from Apify store to run. For example 'apify/website-content-crawler' to use the Website Content Crawler Actor."
  },
  "run_input": {
    "display_name": "Run input",
    "info": "The JSON input for the Actor run. For example for the 'apify/website-content-crawler' Actor: {\"startUrls\":[{\"url\":\"https://docs.apify.com/academy/web-scraping-for-beginners\"}],\"maxCrawlDepth\":0}"
  },
  "dataset_fields": {
    "display_name": "Output fields",
    "info": "Fields to extract from the dataset, split by commas. Other fields will be ignored. Dots in nested structures will be replaced by underscores. Sample input: 'text, metadata.title'. Sample output: {'text': 'page content here', 'metadata_title': 'page title here'}. For example, for the 'apify/website-content-crawler' Actor, you can extract the 'markdown' field, which is the content of the website in markdown format."
  },
  "flatten_dataset": {
    "display_name": "Flatten output",
    "info": "The output dataset will be converted from a nested format to a flat structure. Dots in nested structure will be replaced by underscores. This is useful for further processing of the Data object. For example, {'a': {'b': 1}} will be flattened to {'a_b': 1}."
  },
  "outputs": {
    "output": {
      "display_name": "Output"
    },
    "tool": {
      "display_name": "Tool"
    }
  },
  "status": {
    "parsing_input": "Parsing input JSON...",
    "flattening_dataset": "Flattening dataset...",
    "building_tool": "Building Apify Actor tool...",
    "calling_actor": "Calling Actor '{actor}'...",
    "streaming_logs": "Streaming logs for run '{run}'...",
    "waiting_for_finish": "Waiting for Actor to finish...",
    "loading_dataset": "Loading dataset..."
  },
  "success": {
    "actor_run_completed": "Actor run completed successfully with {count} items",
    "tool_built": "Tool built successfully for Actor '{actor}'"
  },
  "errors": {
    "invalid_json": "Invalid JSON input: {error}",
    "run_model_failed": "Failed to run Actor: {error}",
    "input_schema_not_found": "Input schema not found",
    "build_tool_failed": "Failed to build tool: {error}",
    "tool_run_failed": "Failed to run tool: {error}",
    "api_token_required": "API token is required",
    "client_creation_failed": "Failed to create Apify client: {error}",
    "actor_not_found": "Actor '{actor}' not found",
    "build_not_found": "Build '{build}' not found",
    "get_build_failed": "Failed to get build for Actor '{actor}': {error}",
    "dataset_not_found": "Dataset not found",
    "dataset_id_not_found": "Dataset ID not found",
    "get_dataset_id_failed": "Failed to get dataset ID for run '{run}': {error}",
    "actor_run_details_not_found": "Actor run details not found",
    "run_id_not_found": "Run ID not found",
    "run_client_not_found": "Run client not found",
    "run_actor_failed": "Failed to run Actor '{actor}': {error}"
  },
  "logs": {
    "running_actor": "Running Actor '{actor}' with {fields} fields",
    "dataset_flattened": "Dataset flattened successfully",
    "fetching_build": "Fetching build for Actor '{actor}'",
    "client_created": "Apify client created successfully",
    "build_retrieved": "Build retrieved for Actor '{actor}' (build ID: {build})",
    "dataset_id_retrieved": "Dataset ID retrieved for run '{run}' (dataset ID: {dataset})",
    "actor_run_finished": "Actor run '{run}' finished",
    "dataset_loaded": "Dataset '{dataset}' loaded with {items} items"
  },
  "tool": {
    "input_schema_prefix": "JSON encoded as a string with input schema (STRICTLY FOLLOW JSON FORMAT AND SCHEMA):",
    "required_fields_prefix": "\n\nRequired fields:",
    "description_prefix": "Run an Apify Actor with the given input. Here is a part of the currently loaded Actor README:"
  }
}