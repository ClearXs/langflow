{
  "display_name": "Loop",
  "description": "Execute iterative operations with support for various loop types, conditions, and parallel processing.",
  "loop_type": {
    "display_name": "Loop Type",
    "info": "Type of loop to execute: for_each (iterate over data), while/until (conditional), range (numeric), or infinite."
  },
  "input_data": {
    "display_name": "Input Data",
    "info": "Data to iterate over or use as input for each loop iteration."
  },
  "loop_condition": {
    "display_name": "Loop Condition",
    "info": "JSON object defining loop conditions. Use 'condition' field with expressions like 'item > 0' or 'index < 10'."
  },
  "range_start": {
    "display_name": "Range Start",
    "info": "Starting value for range-type loops."
  },
  "range_end": {
    "display_name": "Range End",
    "info": "Ending value for range-type loops (exclusive)."
  },
  "range_step": {
    "display_name": "Range Step",
    "info": "Step size for range-type loops."
  },
  "max_iterations": {
    "display_name": "Max Iterations",
    "info": "Maximum number of iterations to prevent infinite loops."
  },
  "delay_between_iterations": {
    "display_name": "Delay Between Iterations (seconds)",
    "info": "Time to wait between each iteration."
  },
  "break_on_error": {
    "display_name": "Break on Error",
    "info": "Whether to stop the loop when an error occurs in processing an item."
  },
  "collect_results": {
    "display_name": "Collect Results",
    "info": "Whether to collect and return results from each iteration."
  },
  "output_mode": {
    "display_name": "Output Mode",
    "info": "How to format the loop results: all_results, last_result, aggregated, or streaming."
  },
  "include_index": {
    "display_name": "Include Index",
    "info": "Whether to include the iteration index in each result."
  },
  "parallel_execution": {
    "display_name": "Parallel Execution",
    "info": "Whether to process items in parallel batches for better performance."
  },
  "batch_size": {
    "display_name": "Batch Size",
    "info": "Number of items to process in each parallel batch."
  },
  "outputs": {
    "loop_results": {
      "display_name": "Loop Results"
    },
    "loop_stats": {
      "display_name": "Loop Statistics"
    },
    "current_item": {
      "display_name": "Current Item"
    }
  },
  "success": {
    "loop_completed": "Loop completed successfully. {iterations} iterations in {duration:.2f} seconds."
  },
  "warnings": {
    "condition_evaluation_error": "Error evaluating condition '{condition}': {error}",
    "item_processing_error": "Error processing item at index {index}: {error}",
    "max_iterations_reached": "Loop stopped after reaching maximum iterations limit ({max_iterations})"
  },
  "errors": {
    "invalid_range": "Range start must be less than range end.",
    "invalid_step": "Range step must be greater than 0.",
    "invalid_max_iterations": "Max iterations must be greater than 0.",
    "invalid_delay": "Delay between iterations cannot be negative.",
    "invalid_batch_size": "Batch size must be greater than 0.",
    "invalid_loop_condition": "Invalid JSON format in loop condition: {error}",
    "unsupported_loop_type": "Unsupported loop type: {type}",
    "processing_error": "Error processing item at index {index}: {error}",
    "loop_execution_error": "Error during loop execution: {error}",
    "stats_error": "Error getting loop statistics: {error}",
    "current_item_error": "Error getting current item: {error}"
  }
}