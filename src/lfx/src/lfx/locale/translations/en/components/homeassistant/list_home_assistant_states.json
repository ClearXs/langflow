{
  "description": "Retrieve states from Home Assistant. The agent only needs to specify 'filter_domain' (optional). Token and base_url are not exposed to the agent.",
  "ha_token": {
    "display_name": "Home Assistant Token",
    "info": "Home Assistant Long-Lived Access Token"
  },
  "base_url": {
    "display_name": "Home Assistant URL",
    "info": "e.g., http://192.168.0.10:8123"
  },
  "filter_domain": {
    "display_name": "Default Filter Domain (Optional)",
    "info": "light, switch, sensor, etc. (Leave empty to fetch all)"
  },
  "errors": {
    "timeout": "Request timeout: {error}",
    "connection_failed": "Failed to connect to Home Assistant at {base_url}: {error}",
    "http_error": "HTTP error {status}: {error}",
    "request_failed": "Failed to fetch states: {error}",
    "processing_failed": "Error processing response: {error}",
    "unexpected_format": "Error: Unexpected response format.",
    "formatting_failed": "Error: Failed to process response. Details: {error}"
  },
  "logs": {
    "running_with_filter": "Running with filter domain: {filter_domain}",
    "building_tool": "Building List Home Assistant States tool",
    "tool_invoked": "Tool invoked by agent with filter domain: {filter_domain}",
    "fetching_states": "Fetching states from {base_url} with filter: {filter_domain}",
    "requesting_url": "Requesting URL: {url}",
    "states_retrieved": "Retrieved {count} state(s) from Home Assistant",
    "applying_filter": "Applying domain filter: {domain}",
    "filtered_states": "Filtered {filtered_count} of {total_count} states for domain: {domain}",
    "returning_all_states": "Returning all {count} states",
    "formatting_response": "Formatting response of type: {result_type}",
    "formatted_list": "Formatted list with {count} item(s)",
    "formatted_dict": "Formatted dictionary response",
    "formatted_string": "Formatted string response"
  }
}